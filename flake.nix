{
  description = "Networks client setups";
  outputs =
    { self, nixpkgs }:
    let
      networks = import ./networks;
      sh = {
        export = env:
          # exports flat list of attrs as env variables
          builtins.foldl' (a: b: "${a}${b}") "" (nixpkgs.lib.mapAttrsToList
            (name: value: "export ${name}=${builtins.toString value};")
            env);
      };
      lib = {
        inherit sh networks;
      };
      gen = networks:
        ''
          echo '${builtins.toJSON networks}' | jq . --sort-keys > networks.autogenerated.json          
          git add .
          git commit --message "Update networks client setup"
          git push
        '';
    in
    rec {
      packages.x86_64-linux.default = nixpkgs.legacyPackages.x86_64-linux.writeShellScriptBin "default" (gen networks);
      packages.x86_64-darwin.default = nixpkgs.legacyPackages.x86_64-darwin.writeShellScriptBin "default" (gen networks);
      packages.aarch64-linux.default = nixpkgs.legacyPackages.aarch64-linux.writeShellScriptBin "default" (gen networks);
      packages.aarch64-darwin.default = nixpkgs.legacyPackages.aarch64-darwin.writeShellScriptBin "default" (gen networks);
      overlays.default = final: prev: {
        networksLib = lib;
      };
      inherit lib;
    };
}
